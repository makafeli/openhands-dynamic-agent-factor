name: Publish Package

on:
  release:
    types: [created, published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Build package
      run: npm run build

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Build package
      run: npm run build

    - name: Publish to NPM
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: npm publish --access public

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: twine upload dist/*

  update-docs:
    needs: [publish-npm, publish-pypi]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install \
          mkdocs \
          mkdocs-material \
          mkdocs-minify-plugin \
          pymdown-extensions \
          pygments

    - name: Create assets directories
      run: |
        mkdir -p docs/assets/stylesheets
        mkdir -p docs/assets/javascripts
        touch docs/assets/stylesheets/extra.css
        touch docs/assets/javascripts/extra.js

    - name: Build documentation
      run: mkdocs build

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site

    - name: Notify completion
      run: |
        echo "Package publishing completed successfully"
        echo "NPM package: https://www.npmjs.com/package/dynamic-agent"
        echo "PyPI package: https://pypi.org/project/openhands-dynamic-agent-factor/"
        echo "Documentation: https://makafeli.github.io/openhands-dynamic-agent-factor/"
